<Window x:Class="ThxLivet.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ThxLivet.Views"
        xmlns:vm="clr-namespace:ThxLivet.ViewModels"
        Title="MainWindow" Height="627" Width="674">

    <Window.Background>
        <ImageBrush ImageSource = "../Image/emoi_haikei.jpg" Stretch="UniformToFill"/>
    </Window.Background>

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Window.Resources>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <!--オフ状態のイメージ-->
                                <Image Name="TickImage" Source="../Image/hamedorikun.png" Grid.Column="0"/>
                            </BulletDecorator.Bullet>
                            <ContentPresenter VerticalAlignment="Center" Grid.Column="1"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <!--オン状態のイメージ-->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="TickImage" Property="Source" Value="../Image/emoihamedorikun.jpg"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Canvas Grid.ColumnSpan="2">
            <TextBlock Text="ユーザー名" Foreground="white"  FontSize="40" Canvas.Left="115" Canvas.Top="130" Height="55" Width="175"/>
            <TextBox Text="{Binding User.Name}" Width="195" Canvas.Left="115" Canvas.Top="190" Height="55" Background="black" Foreground="white"  FontSize="40"/>
            <TextBlock Text="パスワード" Foreground="white"  FontSize="40" Canvas.Left="355" Canvas.Top="130" Height="55" Width="175"/>
            <TextBox Text="{Binding User.Password}" Width="200" Canvas.Left="355" Canvas.Top="190" Height="55" Background="black" Foreground="white"  FontSize="40"/>
            <Button Background="White" Canvas.Top="505" Content="作成" Height="50" Width="165" FontSize="30" Command="{Binding LogonCommand}"  Canvas.Left="265"/>
            <TextBlock Text="メールアドレス" Foreground="white"  FontSize="36" Canvas.Left="115" Canvas.Top="315" Height="55" Width="195"/>
            <TextBlock Text="部署・課" Foreground="white"  FontSize="40" Canvas.Left="355" Canvas.Top="315" Height="55" Width="175"/>
            <TextBox Text="{Binding User.Name}" Width="195" Canvas.Left="115" Canvas.Top="395" Height="55" Background="black" Foreground="white"  FontSize="40"/>

            <CheckBox FontSize="14" Width="64" Height="85" HorizontalAlignment="Left" IsThreeState="False" Name="CheckBox1" VerticalAlignment="Top"
              IsChecked="false" Canvas.Left="400" Canvas.Top="375" RenderTransformOrigin="0.609,0.059" />

        </Canvas>
    </Grid>
</Window>
